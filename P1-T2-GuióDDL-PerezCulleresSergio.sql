
drop table usuari;

drop table membre_equip;

drop table equip;
drop table categoria;
drop table jugador;
drop table temporada;


CREATE TABLE usuari(
    login VARCHAR(30) NOT NULL,
    nom VARCHAR(50) NOT NULL,
    password VARCHAR(40) NOT NULL,
    CONSTRAINT PK_usuari PRIMARY KEY(login)
);

CREATE TABLE temporada(
    any_t NUMBER(4,0) NOT NULL,

    CONSTRAINT PK_temporada PRIMARY KEY(any_t)
);

CREATE TABLE jugador(
    id number(3,0) generated by default on null as identity,
    nom VARCHAR(30) NOT NULL,
    cognom VARCHAR(50) NOT NULL,
    sexe VARCHAR(1) NOT NULL,
    data_naix date NOT NULL,
    id_legal VARCHAR(10) NOT NULL,
    iban VARCHAR(40) NOT NULL,
    any_fi_reviso_medica number(4,0) NOT NULL,
    adreca VARCHAR(50) NOT NULL,
    foto BLOB,
    
    CONSTRAINT jugador_CK_sexe CHECK (sexe IN ('H','D')),
    CONSTRAINT un_jugador_id_legal UNIQUE (id_legal),
    CONSTRAINT PK_jugador PRIMARY KEY(id)
);
CREATE INDEX idx_nom_jugador ON jugador (nom,cognom);

CREATE TABLE categoria(
    id number(3,0) generated by default on null as identity,
    nom VARCHAR(30) NOT NULL,
    edat_min number(3,0) NOT NULL,
    edat_max number(3,0) NOT NULL,

    CONSTRAINT categoria_CK_edat CHECK (edat_min <= edat_max and edat_min > 0),
    CONSTRAINT un_categoria_name UNIQUE (nom),
    CONSTRAINT PK_categoria PRIMARY KEY(id)
);

CREATE TABLE equip(
    id number(3,0) generated by default on null as identity,
    nom VARCHAR(30) NOT NULL,
    tipus VARCHAR(1) NOT NULL,
    temporada NUMBER(4,0) NOT NULL,
    categoria number(3,0),
    
    CONSTRAINT fk_temporada_equip FOREIGN KEY(temporada) REFERENCES temporada(any_t),
    CONSTRAINT fk_categoria_equip FOREIGN KEY(categoria) REFERENCES categoria(id),
    CONSTRAINT equip_CK_tipus CHECK (tipus IN ('H','D','M')),
    CONSTRAINT PK_equip PRIMARY KEY(id) 
);
CREATE INDEX idx_nom_equip ON equip (nom);

CREATE TABLE membre_equip(
    id_equip number(3,0)NOT NULL,
    id_jugador number(3,0)NOT NULL,
    titular_convidat VARCHAR(1) NOT NULL,
    
    
    CONSTRAINT fk_equip_membre_equip FOREIGN KEY(id_equip) REFERENCES equip(id),
    CONSTRAINT fk_jugador_membre_equip FOREIGN KEY(id_jugador) REFERENCES jugador(id),
    CONSTRAINT membre_equip_CK_titular_convidat CHECK (titular_convidat IN ('T','C')),
    CONSTRAINT PK_membre_equip PRIMARY KEY(id_equip,id_jugador)
);

CREATE OR REPLACE TRIGGER trg_validar_membre_equip
BEFORE INSERT OR UPDATE ON membre_equip
FOR EACH ROW
DECLARE
    v_valor_equip CHAR(1);
    v_valor_jugador CHAR(1);
BEGIN
    SELECT tipus
    INTO v_valor_equip
    FROM equip
    WHERE id = :NEW.id_equip;
    
    SELECT sexe
    INTO v_valor_jugador
    FROM jugador
    WHERE id = :NEW.id_jugador;
    
    IF v_valor_equip != 'M' THEN
        IF v_valor_equip != v_valor_jugador THEN
            RAISE_APPLICATION_ERROR(-20001, 'Error: Jugador no valid en el tipus de equip');
        END IF;
    END IF;
END;
/


CREATE OR REPLACE TRIGGER trg_check_datanaix_jugador
BEFORE INSERT OR UPDATE ON jugador
FOR EACH ROW
BEGIN
    IF :NEW.data_naix > SYSDATE THEN
        RAISE_APPLICATION_ERROR(-20002, 'La data no pot ser futura');
    END IF;
END;
/


CREATE OR REPLACE TRIGGER trg_validar_titular
BEFORE INSERT OR UPDATE ON membre_equip
FOR EACH ROW
DECLARE
    v_temporada equip.temporada%TYPE;
    v_titular_existent NUMBER;
BEGIN
    IF :NEW.titular_convidat = 'T' THEN
        SELECT temporada INTO v_temporada
        FROM equip
        WHERE id = :NEW.id_equip;

        
        SELECT COUNT(*)
        INTO v_titular_existent
        FROM membre_equip me
        JOIN equip e ON me.id_equip = e.id
        WHERE me.id_jugador = :NEW.id_jugador
        AND me.titular_convidat = 'T'  
        AND e.temporada = v_temporada;

        
        IF v_titular_existent > 0 THEN
            RAISE_APPLICATION_ERROR(-20004, 'El jugador ya es titular per un altre equip en aquesta temporada');
        END IF;
    END IF;
END;
/


CREATE OR REPLACE TRIGGER trg_validar_categorria_equip
BEFORE INSERT OR UPDATE ON membre_equip
FOR EACH ROW
DECLARE
    v_edat_maxima NUMBER;
    v_categoria NUMBER;
    v_temporada NUMBER;
    v_data_naix_jugador DATE;
    v_edat_jugador NUMBER;
BEGIN

    SELECT categoria, temporada INTO v_categoria, v_temporada
    FROM equip
    WHERE id = :NEW.id_equip;


    SELECT edat_max INTO v_edat_maxima
    FROM categoria
    WHERE id = v_categoria;
    

    SELECT data_naix INTO v_data_naix_jugador
    FROM jugador
    WHERE id = :NEW.id_jugador;


    v_edat_jugador := v_temporada - EXTRACT(YEAR FROM v_data_naix_jugador);
    
    IF v_edat_jugador > v_edat_maxima THEN
        RAISE_APPLICATION_ERROR(-20005, 'El jugador no pt jugar en la categoria');
    END IF;
END;
/

INSERT INTO usuari (login,nom,password) VALUES ('usuari','usuari','bfc1e30fdec36a45f0bdbfe0390630b4d5f3ac75');
INSERT INTO usuari (login,nom,password) VALUES ('sergio','sergio','6ed32edf4e92ab3c0a4dc6f90242953c344051ad');




INSERT INTO categoria (nom,edat_min,edat_max) VALUES ('Benjamí',7,8);
INSERT INTO categoria (nom,edat_min,edat_max) VALUES ('Aleví',9,10);
INSERT INTO categoria (nom,edat_min,edat_max) VALUES ('Infantil',11,13);
INSERT INTO categoria (nom,edat_min,edat_max) VALUES ('Cadet',14,15);
INSERT INTO categoria (nom,edat_min,edat_max) VALUES ('Juvenil',16,17);
INSERT INTO categoria (nom,edat_min,edat_max) VALUES ('Senior',18,21);
INSERT INTO categoria (nom,edat_min,edat_max) VALUES ('Vetera',22,125);


